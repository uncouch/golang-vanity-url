name: build-push-deploy
on:
  push:
    branches:
      - 'main'
jobs:
  test-build-publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          golang:
            - '**/*.go'
            - 'go.*'
    - uses: google-github-actions/setup-gcloud@v0.2.0
      if: steps.filter.outputs.golang == 'true'
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true
    - uses: docker/setup-buildx-action@v1
      if: steps.filter.outputs.golang == 'true'
    - run: |
        gcloud auth configure-docker ${{ secrets.REGISTRY_HOST }}
      if: steps.filter.outputs.golang == 'true'
    - uses: crazy-max/ghaction-docker-meta@v1
      if: steps.filter.outputs.golang == 'true'
      id: docker_meta
      with:
        images: ${{ secrets.REGISTRY_URL }}/${{ github.event.repository.name }}
        tag-sha: true
        tag-latest: false
        tag-custom: latest
    - uses: docker/build-push-action@v2
      if: steps.filter.outputs.golang == 'true'
      with:
        push: true
        tags: ${{ steps.docker_meta.outputs.tags }}
  notify:
    runs-on: ubuntu-latest
    if: always()
    needs: [linter, test, tag]
    steps:
    - uses: Gamesight/slack-workflow-status@v1.0.1
      if: always()
      with:
        channel: ${{ secrets.SLACK_CHANNEL }}
        include_jobs: true
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        slack_webhook_url: ${{ secrets.SLACK_WEBHOOK }}
