name: build-push-deploy
on:
  push:
    branches:
      - 'main'
jobs:
  test-build-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Configure change set filter
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            golang:
              - '**/*.go'
      - name: Setup Google Cloud SDK
        if: steps.filter.outputs.golang == 'true'
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Setup Docker buildx
        if: steps.filter.outputs.golang == 'true'
        uses: docker/setup-buildx-action@v1
      - name: Configure Docker authentication
        if: steps.filter.outputs.golang == 'true'
        run: |
          gcloud auth configure-docker ${{ secrets.REGISTRY_HOST }}
      - name: Generate container image metadata
        if: steps.filter.outputs.golang == 'true'
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${{ secrets.REGISTRY_URL }}/golang-vanity-url
          tag-sha: true
          tag-latest: false
          tag-custom: latest
      - name: Build and push container image
        if: steps.filter.outputs.golang == 'true'
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
      - name: Slack Notification
        uses: lazy-actions/slatify@master
        if: always()
        with:
          job_name: '*${{ github.repository }} [ref=${{ github.ref }}, build=${{ github.run_number }}]*:'
          type: ${{ job.status }}
          mention: 'here'
          mention_if: 'failure'
          channel: ${{ secrets.SLACK_CHANNEL }}
          url: ${{ secrets.SLACK_WEBHOOK }}
